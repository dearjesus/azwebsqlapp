on:
  workflow_dispatch:
name: Deploy Azure Resources
permissions:
  id-token: write
  contents: read
jobs:
  deploy-and-configure-azure:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

      # Deploy ARM templates
    - name: Deploy Resources
      id: deploy
      uses: azure/arm-deploy@v2
      with:
        scope: 'subscription'
        region: 'UK South'
        resourceGroupName: ${{ secrets.AZURE_RG }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        parameters: 'resourceGroupName=${{ secrets.AZURE_RG }} sqlAdmins=${{ secrets.SQL_ADMINS }}'
        template: ./main.bicep
      
      # Grant SQL Server Directory Readers Role
    - name: Grant SQL Entra Role
      id: sqlentrarole
      uses: azure/powershell@master
      with:
        inlineScript: ./powershellscripts/entraacl.ps1 ${{ steps.deploy.outputs.sqlServerName }}
        azPSVersion: "latest"

      # Create Web App to SQL Connection using SA-MI
    - name: Create SQL Connection
      id: sqlconnection
      uses: azure/sql-action@v2.3
      with:        
        connection-string: 'Server=${{ steps.deploy.outputs.sqlServerName }}.database.windows.net;Initial Catalog=${{ steps.deploy.outputs.sqlDatabaseName }};Authentication=Active Directory Default; Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
        arguments: '-v webSiteName="${{ steps.deploy.outputs.webSiteName }}"'
        path: './sqlscripts/acl.sql'